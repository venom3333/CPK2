@using CPK.Sso.Models
@using Microsoft.AspNetCore.Identity

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var isAdmin = false;
    if (SignInManager.IsSignedIn(User))
    {
        isAdmin = await UserManager.IsInRoleAsync(await UserManager.GetUserAsync(User), RolesEnum.admin.ToString());
    }
}
@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="" asp-controller="Account" asp-action="Logout" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav navbar-right">
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Здравствуйте, <b>@UserManager.GetUserName(User)</b>
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdownMenuLink">
                    @if (isAdmin)
                    {
                        <a class="dropdown-item" asp-area="" asp-controller="UserManagement" asp-route-returnUrl="@ViewData["ReturnUrl"]" asp-action="Index" asp-route-returnurl="/">Пользователи</a>
                    }
                    <a class="dropdown-item" asp-area="" asp-controller="Account" asp-route-returnUrl="@ViewData["ReturnUrl"]" asp-action="ChangePassword">Сменить пароль</a>
                    <a class="dropdown-item" asp-area="" asp-controller="Account"  asp-action="Logout">Выйти</a>
                </div>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Login" asp-route-returnUrl="@ViewData["ReturnUrl"]">Войти</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Register" asp-route-returnUrl="@ViewData["ReturnUrl"]">Регистрация</a>
        </li>
    </ul>
}