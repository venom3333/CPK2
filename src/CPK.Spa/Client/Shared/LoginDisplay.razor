@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using CPK.Contracts

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager
@inject ConfigModel ConfigModel

<AuthorizeView>
    <Authorized>
        Вы вошли как, @context?.User?.Identity?.Name!
        <button @onclick="BeginSignOut">Выйти</button>
        <AuthorizeView Context="UserManagementContext" Roles="admin">
            <Authorized>
                <button @onclick="UserManagement">Пользователи</button>
            </Authorized>
        </AuthorizeView>
    </Authorized>
    <NotAuthorized>
        <button @onclick="Login">Вход</button>
        <button @onclick="Register">Регистрация</button>
    </NotAuthorized>
</AuthorizeView>

@code {
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    private void Login(MouseEventArgs args)
    {
        Navigation.NavigateTo(RemoteAuthenticationDefaults.LoginPath);
    }

    private void Register(MouseEventArgs args)
    {
        Navigation.NavigateTo($"{ConfigModel.SsoUri}/account/register?returnUrl={Navigation.BaseUri}");
    }

    private void UserManagement(MouseEventArgs args)
    {
        Navigation.NavigateTo($"{ConfigModel.SsoUri}/UserManagement/index?returnUrl={Navigation.BaseUri}");
    }
}
